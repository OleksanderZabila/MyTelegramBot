import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import datetime
import time
import schedule
import threading
import sys

bot = telebot.TeleBot("6637738833:AAH9lmzTbk6SWrQC5SM4a3eECy56fU6KZfo")

def stop_bot(message):
    bot.send_message(message.chat.id, "–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∑–∞ –∫–æ–º–∞–Ω–¥–æ—é /stop.")
    sys.exit(0)

config_file = "time.txt"
reminder_mode = False  # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Ä–µ–∂–∏–º—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –∑ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
def load_reminders():
    try:
        with open(config_file, "r") as f:
            reminders = {}
            for line in f:
                time_str, reminder_text, days = line.strip().split(":", 2)
                reminders[time_str] = (reminder_text, days.split(","))
            return reminders
    except FileNotFoundError:
        return {}

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å —É —Ñ–∞–π–ª –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
def save_reminders(reminders):
    with open(config_file, "w") as f:
        for time_str, (reminder_text, days) in reminders.items():
            f.write(f"{time_str}:{reminder_text}:{','.join(days)}\n")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
def send_reminders():
    current_day = datetime.datetime.now().strftime("%a").lower()
    reminders = load_reminders()
    for time_str, (reminder_text, days) in reminders.items():
        if current_day in days and datetime.datetime.now().strftime("%H:%M") == time_str:
            bot.send_message(CHAT_ID, f"–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: {reminder_text}")

# –î–æ–¥–∞—î–º–æ —â–æ–¥–µ–Ω–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó send_reminders —á–µ—Ä–µ–∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É schedule
schedule.every().day.at("00:01").do(send_reminders)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É send_reminders() –≤ —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
def run_send_reminders():
    while True:
        schedule.run_pending()
        time.sleep(1)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
@bot.message_handler(func=lambda message: message.text == '–ó—Ä–æ–±–∏—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è‚è∞')
def set_reminder(message):
    global reminder_mode
    reminder_mode = True  # –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è —Ä–µ–∂–∏–º—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    days_of_week = ["–ø–Ω", "–≤—Ç", "—Å—Ä", "—á—Ç", "–ø—Ç", "—Å–±", "–Ω–¥"]
    keyboard.add(*[telebot.types.KeyboardButton(day) for day in days_of_week])
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —á–∞—Å —ñ —Ç–µ–∫—Å—Ç –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ '–ß–ß:–ú–ú:–¢–µ–∫—Å—Ç'\n 13:30:–ü–æ—Å–Ω—ñ–¥–∞—Ç—å:", reply_markup=keyboard)

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–æ–≥–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
@bot.message_handler(func=lambda message: reminder_mode)
def handle_reminder_input(message):
    global reminder_mode
    try:
        time_str, reminder_text = message.text.strip().split(":", 1)
        datetime.datetime.strptime(time_str, "%H:%M")
        reminders = load_reminders()
        reminders[time_str] = (reminder_text, [])
        bot.register_next_step_handler(message, choose_days, time_str, reminders)
        bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å –¥–Ω—ñ —Ç–∏–∂–Ω—è –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:", reply_markup=telebot.types.ReplyKeyboardRemove())
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥—ñ—Ç—å —á–∞—Å —ñ —Ç–µ–∫—Å—Ç –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ '–ß–ß:–ú–ú:–¢–µ–∫—Å—Ç'.")
        reminder_mode = False  # –í–∏–º–∫–Ω–µ–Ω–Ω—è —Ä–µ–∂–∏–º—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–±–æ—Ä—É –¥–Ω—ñ–≤ —Ç–∏–∂–Ω—è
def choose_days(message, time_str, reminders):
    global reminder_mode
    if message.text.lower() == "–≥–æ—Ç–æ–≤–æ":
        save_reminders(reminders)
        bot.send_message(message.chat.id, f"–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è '{reminders[time_str][0]}' –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {time_str} —É –¥–Ω—ñ: {', '.join(reminders[time_str][1])}.")
    else:
        days_of_week = ["–ø–Ω", "–≤—Ç", "—Å—Ä", "—á—Ç", "–ø—Ç", "—Å–±", "–Ω–¥"]
        if message.text.lower() in days_of_week:
            reminders[time_str][1].append(message.text.lower())
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[telebot.types.KeyboardButton(day) for day in days_of_week])
        keyboard.add("–ì–æ—Ç–æ–≤–æ")
        bot.send_message(message.chat.id, f"–í–∏–±—Ä–∞–Ω—ñ –¥–Ω—ñ —Ç–∏–∂–Ω—è: {', '.join(reminders[time_str][1])}. –í–∏–±–µ—Ä—ñ—Ç—å —â–µ –¥–Ω—ñ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ì–æ—Ç–æ–≤–æ':", reply_markup=keyboard)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    button1 = telebot.types.KeyboardButton('–ü—Ä–∏–≤—ñ—Çüñê')
    button2 = telebot.types.KeyboardButton('–î–æ–ø–æ–º–æ–≥–∞')
    button3 = telebot.types.KeyboardButton('–ó—Ä–æ–±–∏—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è‚è∞')
    keyboard.add(button1, button2, button3)

    bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=keyboard)

# –ö–æ–º–∞–Ω–¥–∞ /hi
@bot.message_handler(commands=['hi'])
def hi(message):
    mess = f'–ü—Ä–∏–≤—ñ—Ç, <b>{message.from_user.first_name} {message.from_user.last_name}</b>'
    bot.send_message(message.chat.id, mess, parse_mode='html')
    photo = open('D:\PythotProjects\MyTelegramBot\PhotoBot\photo1.png', 'rb')
    bot.send_photo(message.chat.id, photo)

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /help
@bot.message_handler(commands=['help'])
def help_command(message):
    help_com = f'–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç <b>Szabilatestbot</b> —ñ —è –¥–æ–ø–æ–º–∞–≥–∞—é –≤–∞–º. –û—Å—å –¥–µ—è–∫—ñ –∫–æ–º–∞–Ω–¥–∏:\n' \
               f'<b>/hi</b> - –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ\n' \
               f'<b>/help</b>  - –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è\n' \
               f'<b>/id</b>     - –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤–∞—à–æ–≥–æ ID –≤ Telegram\n' \
               f'<b>/setreminder</b> - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å\n' \
               f'–î–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setreminder\n'
    bot.send_message(message.chat.id, help_com, parse_mode='html')

# –û–±—Ä–æ–±–Ω–∏–∫ —ñ–Ω—à–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@bot.message_handler(func=lambda message: True)
def get_user(message):
    if message.text == "–ü—Ä–∏–≤—ñ—Çüñê":
        hi(message)
    elif message.text == "–î–æ–ø–æ–º–æ–≥–∞":
        help_command(message)
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—É.")

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
def run_bot():
    try:
        bot.polling(none_stop=True)
    except KeyboardInterrupt:
        sys.exit(0)

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
bot_thread = threading.Thread(target=run_bot)
bot_thread.start()

# –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é run_send_reminders —É –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
reminder_thread = threading.Thread(target=run_send_reminders)
reminder_thread.start()
